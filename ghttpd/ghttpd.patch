diff --color -ruN ghttpd-1.4-4.orig/main.c ghttpd-1.4-4.new/main.c
--- ghttpd-1.4-4.orig/main.c	2002-09-29 08:16:08.000000000 -0400
+++ ghttpd-1.4-4.new/main.c	2023-08-07 15:08:38.286051364 -0400
@@ -98,7 +98,9 @@
            twice in a row, without waiting for the (ip, port) tuple
            to time out. */
         i = 1;
-        setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, (void*)&i, i);
+        // setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, (void*)&i, i);
+	setsockopt(sockfd, SOL_SOCKET, SO_REUSEADDR, &(int){1}, sizeof(int));
+	setsockopt(sockfd, SOL_SOCKET, SO_REUSEPORT, &(int){1}, sizeof(int));
 	                                      
 
 	my_addr.sin_family = AF_INET;         /* host byte order */
@@ -127,16 +129,16 @@
 	signal(SIGINT, signal_handler);
 	signal(SIGCHLD, signal_handler);
 
-	xx = fork();
-	if(xx==-1)
-	{
-		printf("FATAL ERROR, Could not fork() ghttpd into background\n");
-		syslog(LOG_CRIT, "Could not fork() ghttpd into background\n");
-		closelog();
-		exit(1);
-	}
-	if(xx != 0)	// Parent...
-		exit(0);
+	// xx = fork();
+	// if(xx==-1)
+	// {
+	// 	printf("FATAL ERROR, Could not fork() ghttpd into background\n");
+	// 	syslog(LOG_CRIT, "Could not fork() ghttpd into background\n");
+	// 	closelog();
+	// 	exit(1);
+	// }
+	// if(xx != 0)	// Parent...
+	// 	exit(0);
 		
 	printf("ghttpd launched into background, PID = %d\n", getpid());
 
@@ -154,7 +156,7 @@
 		if ((new_fd = accept(sockfd, (struct sockaddr *)&their_addr, &sin_size)) == -1)
 			continue;
 
-		if (!fork()) { /* this is the child process */
+		// if (!fork()) { /* this is the child process */
 			while(1)
 			{
 				close(sockfd);
@@ -171,7 +173,7 @@
 				
 				if(FD_ISSET(new_fd, &readfds))
 				{
-					setenv("REMOTE_ADDR", (char *)inet_ntoa(their_addr.sin_addr), 1);
+					setenv("REMOTE_ADDR", "127.0.0.1", 1);
 					if(serveconnection(new_fd)==-1) break;
 				}
 				else
@@ -181,7 +183,7 @@
 			
 			close(new_fd);
 			exit(0);
-		}
+		// }
 		close(new_fd);  /* parent doesn't need this */
 		
 		while(waitpid(-1,NULL,WNOHANG) > 0); /* clean up child processes */
diff --color -ruN ghttpd-1.4-4.orig/Makefile ghttpd-1.4-4.new/Makefile
--- ghttpd-1.4-4.orig/Makefile	2002-09-29 08:16:08.000000000 -0400
+++ ghttpd-1.4-4.new/Makefile	2023-08-07 15:08:38.286051364 -0400
@@ -1,7 +1,7 @@
 # Generated by Gareth Owen <gaz@athene.co.uk>
 
-CC = gcc
-CFLAGS = -g -O2
+CC = wllvm
+CFLAGS = -g -O0
 LDFLAGS = 
 LIBS = 
 DESTDIR = /usr/local/ghttpd
diff --color -ruN ghttpd-1.4-4.orig/protocol.c ghttpd-1.4-4.new/protocol.c
--- ghttpd-1.4-4.orig/protocol.c	2002-09-29 08:16:08.000000000 -0400
+++ ghttpd-1.4-4.new/protocol.c	2023-08-07 15:08:38.286051364 -0400
@@ -66,7 +66,7 @@
 	if(ptr == 0) return -1;
 	if(strcmp(ptr, "GET"))
 	{
-		Log("Connection from %s, cmderror = \"GET %s\"", inet_ntoa(sa.sin_addr), ptr);
+		// Log("Connection from %s, cmderror = \"GET %s\"", inet_ntoa(sa.sin_addr), ptr);
 		strcpy(filename, SERVERROOT);
 		strcat(filename, "/cmderror.html");
 		goto sendpage;
@@ -74,7 +74,7 @@
 	ptr = strtok(NULL, " ");
 	if(ptr == NULL)
 	{
-		Log("Connection from %s, cmderror = \"GET\"", inet_ntoa(sa.sin_addr));
+		// Log("Connection from %s, cmderror = \"GET\"", inet_ntoa(sa.sin_addr));
 		strcpy(filename, SERVERROOT);
 		strcat(filename, "/cmderror.html");
 		goto sendpage;
@@ -93,14 +93,14 @@
 		thehost = &defaulthost;
 	if(strstr(ptr, "/.."))
 	{
-		Log("Connection from %s, 404 = \"GET %s\"", inet_ntoa(sa.sin_addr), ptr);
+		// Log("Connection from %s, 404 = \"GET %s\"", inet_ntoa(sa.sin_addr), ptr);
 		strcpy(filename, SERVERROOT);
 		strcat(filename, "/404.html");
 		goto sendpage;
 	}
 
 	getpeername(sockfd, (struct sockaddr *)&sa, &addrlen);
-	Log("Connection from %s, request = \"GET %s\"", inet_ntoa(sa.sin_addr), ptr);
+	// Log("Connection from %s, request = \"GET %s\"", inet_ntoa(sa.sin_addr), ptr);
 
 	// ***** PATCH *****
 	// Replaces %20s of the message string by blanks
@@ -150,7 +150,7 @@
 			execlp(filename, NULL);
 			return 0;
 		}
-		Log("Connection from %s, cgierror = \"EXEC %s %s\"", inet_ntoa(sa.sin_addr), filename ,ptr2+1);
+		// Log("Connection from %s, cgierror = \"EXEC %s %s\"", inet_ntoa(sa.sin_addr), filename ,ptr2+1);
 		strcpy(filename, SERVERROOT);
 		strcat(filename, "/cgierror.html");
 		goto sendpage;
diff --color -ruN ghttpd-1.4-4.orig/util.c ghttpd-1.4-4.new/util.c
--- ghttpd-1.4-4.orig/util.c	2002-09-29 08:21:48.000000000 -0400
+++ ghttpd-1.4-4.new/util.c	2023-08-07 15:12:17.747620393 -0400
@@ -74,7 +74,7 @@
 	unsigned long count=0;
 	char tempstring[255], *ptr1=0;
 
-	if((in = fopen("/etc/ghttpd.conf", "rt")) == NULL)
+	if((in = fopen("./ghttpd.conf", "rt")) == NULL)
 		return 0;
 		
 	while(!feof(in))
@@ -151,7 +151,7 @@
 	int loop=0;
 	
 	// If config file cannot be read then the defaults will be used
-	if((in = fopen("/etc/ghttpd.conf", "rt"))==NULL)
+	if((in = fopen("./ghttpd.conf", "rt"))==NULL)
 		return;
 
 	no_vhosts=0;
